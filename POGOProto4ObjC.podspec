Pod::Spec.new do |s|
  s.name     = 'POGOProto4ObjC'
  s.version  = '0.0.1'
  s.license  = '...'
  s.authors  = { 'crexista' => 'fake@fake.xxx' }
  s.homepage = 'crexista'
  s.summary = 'POGOProto For Objective-C'
  s.source = { :git => 'https://github.com/crexista/POGOProto4ObjC' }

  s.ios.deployment_target = '9.0'
  s.osx.deployment_target = '10.9'

  # Base directory where the .proto files are.
  src = 'POGOProtos'

  # We'll use protoc with the gRPC plugin.
  s.dependency '!ProtoCompiler', '~> 3.0.0'

  # Pods directory corresponding to this app's Podfile, relative to the location of this podspec.
  pods_root = File.expand_path(File.dirname(__FILE__))+'/../Pods'

  # Path where Cocoapods downloads protoc and the gRPC plugin.
  protoc_dir = "#{pods_root}/!ProtoCompiler"
  protoc = "#{protoc_dir}/protoc"
  plugin = "#{pods_root}/!ProtoCompiler-gRPCPlugin/grpc_objective_c_plugin"

  # Directory where you want the generated files to be placed. This is an example.
  dir = "#{s.name}"
  lib_dir = File.expand_path(File.dirname(__FILE__))+'/objc/POGOProtos'
  # Run protoc with the Objective-C and gRPC plugins to generate protocol messages and gRPC clients.
  # You can run this command manually if you later change your protos and need to regenerate.
  # Alternatively, you can advance the version of this podspec and run `pod update`.
  s.prepare_command = <<-CMD
    rm -rf objc
    mkdir -p objc
    find POGOProtos -type f | grep .proto$ | xargs #{protoc} --objc_out=objc
    find objc/POGOProtos -type f | grep pbobjc.m | xargs sed -i -e 's:#import "POGOProtos:#import "#{lib_dir}:g'
  CMD
  s.source_files = "objc/POGOProtos/**/*.pbobjc.{h,m}"
  s.requires_arc = false
  s.dependency 'Protobuf'
  s.pod_target_xcconfig = {
    'GCC_PREPROCESSOR_DEFINITIONS' => '$(inherited) GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1',
  }
  # The --objc_out plugin generates a pair of .pbobjc.h/.pbobjc.m files for each .proto file.
#  s.subspec 'Messages' do |ms|
#    ms.source_files = "#{dir}/POGOProtos/**/*.pbobjc.{h,m}"
#    ms.header_mappings_dir = "#{dir}/#{dir}//POGOProtos/"
#    ms.requires_arc = false
    # The generated files depend on the protobuf runtime.
#    ms.dependency 'Protobuf'
    # This is needed by all pods that depend on Protobuf:
#    ms.pod_target_xcconfig = {
#      'GCC_PREPROCESSOR_DEFINITIONS' => '$(inherited) GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1',
#    }
#  end

  # The --objcgrpc_out plugin generates a pair of .pbrpc.h/.pbrpc.m files for each .proto file with
  # a service defined.
#  s.subspec 'Services' do |ss|
#    ss.source_files = "#{dir}/*.pbrpc.{h,m}"
#    ss.header_mappings_dir = dir
#    ss.requires_arc = true
    # The generated files depend on the gRPC runtime, and on the files generated by `--objc_out`.
#    ss.dependency 'gRPC-ProtoRPC'
#    ss.dependency "#{s.name}/Messages"
#  end
end
